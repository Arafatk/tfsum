// Code generated by protoc-gen-go.
// source: tensorflow/core/framework/variable.proto
// DO NOT EDIT!

package tensorflow

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Protocol buffer representing a Variable.
type VariableDef struct {
	// Name of the variable tensor.
	VariableName string `protobuf:"bytes,1,opt,name=variable_name,json=variableName" json:"variable_name,omitempty"`
	// Name of the initializer op.
	InitializerName string `protobuf:"bytes,2,opt,name=initializer_name,json=initializerName" json:"initializer_name,omitempty"`
	// Name of the snapshot tensor.
	SnapshotName string `protobuf:"bytes,3,opt,name=snapshot_name,json=snapshotName" json:"snapshot_name,omitempty"`
	// Support for saving variables as slices of a larger variable.
	SaveSliceInfoDef *SaveSliceInfoDef `protobuf:"bytes,4,opt,name=save_slice_info_def,json=saveSliceInfoDef" json:"save_slice_info_def,omitempty"`
}

func (m *VariableDef) Reset()                    { *m = VariableDef{} }
func (m *VariableDef) String() string            { return proto.CompactTextString(m) }
func (*VariableDef) ProtoMessage()               {}
func (*VariableDef) Descriptor() ([]byte, []int) { return fileDescriptor18, []int{0} }

func (m *VariableDef) GetVariableName() string {
	if m != nil {
		return m.VariableName
	}
	return ""
}

func (m *VariableDef) GetInitializerName() string {
	if m != nil {
		return m.InitializerName
	}
	return ""
}

func (m *VariableDef) GetSnapshotName() string {
	if m != nil {
		return m.SnapshotName
	}
	return ""
}

func (m *VariableDef) GetSaveSliceInfoDef() *SaveSliceInfoDef {
	if m != nil {
		return m.SaveSliceInfoDef
	}
	return nil
}

type SaveSliceInfoDef struct {
	// Name of the full variable of which this is a slice.
	FullName string `protobuf:"bytes,1,opt,name=full_name,json=fullName" json:"full_name,omitempty"`
	// Shape of the full variable.
	FullShape []int64 `protobuf:"varint,2,rep,packed,name=full_shape,json=fullShape" json:"full_shape,omitempty"`
	// Offset of this variable into the full variable.
	VarOffset []int64 `protobuf:"varint,3,rep,packed,name=var_offset,json=varOffset" json:"var_offset,omitempty"`
	// Shape of this variable.
	VarShape []int64 `protobuf:"varint,4,rep,packed,name=var_shape,json=varShape" json:"var_shape,omitempty"`
}

func (m *SaveSliceInfoDef) Reset()                    { *m = SaveSliceInfoDef{} }
func (m *SaveSliceInfoDef) String() string            { return proto.CompactTextString(m) }
func (*SaveSliceInfoDef) ProtoMessage()               {}
func (*SaveSliceInfoDef) Descriptor() ([]byte, []int) { return fileDescriptor18, []int{1} }

func (m *SaveSliceInfoDef) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *SaveSliceInfoDef) GetFullShape() []int64 {
	if m != nil {
		return m.FullShape
	}
	return nil
}

func (m *SaveSliceInfoDef) GetVarOffset() []int64 {
	if m != nil {
		return m.VarOffset
	}
	return nil
}

func (m *SaveSliceInfoDef) GetVarShape() []int64 {
	if m != nil {
		return m.VarShape
	}
	return nil
}

func init() {
	proto.RegisterType((*VariableDef)(nil), "tensorflow.VariableDef")
	proto.RegisterType((*SaveSliceInfoDef)(nil), "tensorflow.SaveSliceInfoDef")
}

func init() { proto.RegisterFile("tensorflow/core/framework/variable.proto", fileDescriptor18) }

var fileDescriptor18 = []byte{
	// 295 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x91, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x59, 0x53, 0xa4, 0x9d, 0x5a, 0x2d, 0xf1, 0x12, 0x50, 0xa1, 0xb4, 0x97, 0x78, 0x69,
	0x40, 0xdf, 0xa0, 0xf4, 0x22, 0x82, 0x96, 0x06, 0xbc, 0x86, 0x69, 0x9d, 0xb5, 0x8b, 0x9b, 0xdd,
	0xb0, 0x1b, 0xb7, 0xe0, 0x23, 0xf8, 0x72, 0xbe, 0x8e, 0x47, 0xd9, 0x8d, 0xb1, 0xa1, 0xd7, 0xef,
	0xff, 0x66, 0x92, 0xd9, 0x1f, 0xd2, 0x9a, 0x94, 0xd5, 0x86, 0x4b, 0xbd, 0xcf, 0xb6, 0xda, 0x50,
	0xc6, 0x0d, 0x96, 0xb4, 0xd7, 0xe6, 0x3d, 0x73, 0x68, 0x04, 0x6e, 0x24, 0xcd, 0x2b, 0xa3, 0x6b,
	0x1d, 0xc3, 0xc1, 0x9c, 0x7e, 0x33, 0x18, 0xbe, 0xfc, 0xc5, 0x4b, 0xe2, 0xf1, 0x0c, 0x46, 0xad,
	0x5d, 0x28, 0x2c, 0x29, 0x61, 0x13, 0x96, 0x0e, 0xd6, 0x67, 0x2d, 0x7c, 0xc2, 0x92, 0xe2, 0x5b,
	0x18, 0x0b, 0x25, 0x6a, 0x81, 0x52, 0x7c, 0x92, 0x69, 0xbc, 0x93, 0xe0, 0x5d, 0x74, 0x78, 0x50,
	0x67, 0x30, 0xb2, 0x0a, 0x2b, 0xbb, 0xd3, 0x75, 0xe3, 0x45, 0xcd, 0xbe, 0x16, 0x06, 0xe9, 0x11,
	0x2e, 0x2d, 0x3a, 0x2a, 0xac, 0x14, 0x5b, 0x2a, 0x84, 0xe2, 0xba, 0x78, 0x25, 0x9e, 0xf4, 0x26,
	0x2c, 0x1d, 0xde, 0x5d, 0xcf, 0x0f, 0xbf, 0x3b, 0xcf, 0xd1, 0x51, 0xee, 0xad, 0x07, 0xc5, 0xf5,
	0x92, 0xf8, 0x7a, 0x6c, 0x8f, 0xc8, 0xf4, 0x8b, 0xc1, 0xf8, 0x58, 0x8b, 0xaf, 0x60, 0xc0, 0x3f,
	0xa4, 0xec, 0x9e, 0xd4, 0xf7, 0x20, 0x7c, 0xfe, 0x06, 0x20, 0x84, 0x76, 0x87, 0x95, 0x3f, 0x24,
	0x4a, 0xa3, 0x75, 0xd0, 0x73, 0x0f, 0x7c, 0xec, 0xd0, 0x14, 0x9a, 0x73, 0x4b, 0x75, 0x12, 0x35,
	0xb1, 0x43, 0xf3, 0x1c, 0x80, 0x5f, 0xed, 0xe3, 0x66, 0xb8, 0x17, 0xd2, 0xbe, 0x43, 0x13, 0x66,
	0x17, 0x19, 0x24, 0xda, 0xbc, 0x75, 0x2f, 0xf8, 0x6f, 0x65, 0x71, 0xde, 0xbe, 0xfb, 0xca, 0xb7,
	0x62, 0x57, 0xec, 0x87, 0xb1, 0xcd, 0x69, 0xa8, 0xe8, 0xfe, 0x37, 0x00, 0x00, 0xff, 0xff, 0x9d,
	0x32, 0x24, 0xad, 0xce, 0x01, 0x00, 0x00,
}
